{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 17,
    "lineage": "9d20046a-404a-d3b7-d3ac-6b9f6fc01e66",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "default-vpc-access-public_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBvRU73Kgr7rxTgXNOiDZG4/iYubUy1P4GsSE4fZlcs3TIDm5NltGFXo4MDwXSvBJuds1zWSDrNpnOTtWfifpenCZs/+y4TeBygK/5Pt04xQyboO5ytawSgLm4VCFwj8nibAcO1wkAtjh5+Q+sVcnsIhW7qTJ5OJwdTYJg4JJNJKn4FIfBMnucZkge2687qLioN3tPwgYG9LsPkdZHEM5kd/dO2AkFkzA3knREVmXCnpyq/c1gy9ufecMeR4nPszvHMgRlzfxx9SuDqjXER7KqYQRmmy7c7ThtwZ33BUVfRwnT+4jUns9WcShGYG3uWgItU9XWytX4JCGxtP0pXEUH dafault-vpc-access"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "3.80.200.27"
                }
            },
            "resources": {
                "aws_iam_role.lambda_sm_s3_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "terraform-20190221150945793300000001",
                        "attributes": {
                            "arn": "arn:aws:iam::746022503515:role/terraform-20190221150945793300000001",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-02-21T15:09:46Z",
                            "description": "Role giving lambda full access to S3 and SageMaker",
                            "force_detach_policies": "false",
                            "id": "terraform-20190221150945793300000001",
                            "max_session_duration": "3600",
                            "name": "terraform-20190221150945793300000001",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAICXC67ZPHUBA3H57C"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy_attachment.s3-full-access": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.lambda_sm_s3_role",
                        "data.aws_iam_policy.AmazonS3FullAccess"
                    ],
                    "primary": {
                        "id": "terraform-20190221150945793300000001-20190221150948796800000003",
                        "attributes": {
                            "id": "terraform-20190221150945793300000001-20190221150948796800000003",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                            "role": "terraform-20190221150945793300000001"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy_attachment.sm-full-access": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.lambda_sm_s3_role",
                        "data.aws_iam_policy.AmazonSageMakerFullAccess"
                    ],
                    "primary": {
                        "id": "terraform-20190221150945793300000001-20190221150948796600000002",
                        "attributes": {
                            "id": "terraform-20190221150945793300000001-20190221150948796600000002",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                            "role": "terraform-20190221150945793300000001"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.stream_data_mock_instance": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_key_pair.default-vpc-access"
                    ],
                    "primary": {
                        "id": "i-0f28a32a7bd453bf5",
                        "attributes": {
                            "ami": "ami-035be7bafff33b6b6",
                            "arn": "arn:aws:ec2:us-east-1:746022503515:instance/i-0f28a32a7bd453bf5",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1d",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "EC2_S3Access",
                            "id": "i-0f28a32a7bd453bf5",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "default-vpc-access",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-083b785fe53d53b61",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-083b785fe53d53b61",
                            "private_dns": "ip-172-31-94-176.ec2.internal",
                            "private_ip": "172.31.94.176",
                            "public_dns": "ec2-3-80-200-27.compute-1.amazonaws.com",
                            "public_ip": "3.80.200.27",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-00850602dfc68d176",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "1",
                            "security_groups.3814588639": "default",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-06bf6dc43d91c7c00",
                            "tags.%": "0",
                            "tenancy": "default",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.1194327607": "sg-039dd0a86366c23a2"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_key_pair.default-vpc-access": {
                    "type": "aws_key_pair",
                    "depends_on": [],
                    "primary": {
                        "id": "default-vpc-access",
                        "attributes": {
                            "fingerprint": "0e:5a:a7:10:a6:3b:1d:0a:f8:ef:0f:a4:1e:42:0a:72",
                            "id": "default-vpc-access",
                            "key_name": "default-vpc-access",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBvRU73Kgr7rxTgXNOiDZG4/iYubUy1P4GsSE4fZlcs3TIDm5NltGFXo4MDwXSvBJuds1zWSDrNpnOTtWfifpenCZs/+y4TeBygK/5Pt04xQyboO5ytawSgLm4VCFwj8nibAcO1wkAtjh5+Q+sVcnsIhW7qTJ5OJwdTYJg4JJNJKn4FIfBMnucZkge2687qLioN3tPwgYG9LsPkdZHEM5kd/dO2AkFkzA3knREVmXCnpyq/c1gy9ufecMeR4nPszvHMgRlzfxx9SuDqjXER7KqYQRmmy7c7ThtwZ33BUVfRwnT+4jUns9WcShGYG3uWgItU9XWytX4JCGxtP0pXEUH dafault-vpc-access"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket.fog-datasets": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "fog-datasets",
                        "attributes": {
                            "acceleration_status": "",
                            "arn": "arn:aws:s3:::fog-datasets",
                            "bucket": "fog-datasets",
                            "bucket_domain_name": "fog-datasets.s3.amazonaws.com",
                            "bucket_regional_domain_name": "fog-datasets.s3.amazonaws.com",
                            "cors_rule.#": "0",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "fog-datasets",
                            "lifecycle_rule.#": "0",
                            "logging.#": "0",
                            "object_lock_configuration.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_notification.StreamMockCreate": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_s3_bucket.fog-datasets",
                        "aws_sns_topic.bmw-data-upload"
                    ],
                    "primary": {
                        "id": "fog-datasets",
                        "attributes": {
                            "bucket": "fog-datasets",
                            "id": "fog-datasets",
                            "lambda_function.#": "0",
                            "queue.#": "0",
                            "topic.#": "1",
                            "topic.0.events.#": "1",
                            "topic.0.events.3356830603": "s3:ObjectCreated:*",
                            "topic.0.filter_prefix": "streaming-data-mock",
                            "topic.0.filter_suffix": "",
                            "topic.0.id": "tf-s3-topic-20190221151001804100000004",
                            "topic.0.topic_arn": "arn:aws:sns:us-east-1:746022503515:bmw-data-upload"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_sns_topic.bmw-data-upload": {
                    "type": "aws_sns_topic",
                    "depends_on": [
                        "aws_s3_bucket.fog-datasets"
                    ],
                    "primary": {
                        "id": "arn:aws:sns:us-east-1:746022503515:bmw-data-upload",
                        "attributes": {
                            "application_failure_feedback_role_arn": "",
                            "application_success_feedback_role_arn": "",
                            "application_success_feedback_sample_rate": "0",
                            "arn": "arn:aws:sns:us-east-1:746022503515:bmw-data-upload",
                            "delivery_policy": "",
                            "display_name": "BMW push",
                            "http_failure_feedback_role_arn": "",
                            "http_success_feedback_role_arn": "",
                            "http_success_feedback_sample_rate": "0",
                            "id": "arn:aws:sns:us-east-1:746022503515:bmw-data-upload",
                            "kms_master_key_id": "",
                            "lambda_failure_feedback_role_arn": "",
                            "lambda_success_feedback_role_arn": "",
                            "lambda_success_feedback_sample_rate": "0",
                            "name": "bmw-data-upload",
                            "policy": "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\",\"SNS:Receive\"],\"Resource\":\"arn:aws:sns:us-east-1:746022503515:bmw-data-upload\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"746022503515\"}}},{\"Sid\":\"_s3\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SNS:Publish\",\"Resource\":\"arn:aws:sns:us-east-1:746022503515:bmw-data-upload\",\"Condition\":{\"ArnLike\":{\"aws:SourceArn\":\"arn:aws:s3:::fog-datasets\"}}},{\"Sid\":\"_s3s\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SNS:Publish\",\"Resource\":\"arn:aws:sns:us-east-1:746022503515:bmw-data-upload\",\"Condition\":{\"StringEquals\":{\"aws:SourceArn\":\"arn:aws:s3:::fog-bigdata-bmw-data\"}}}]}",
                            "sqs_failure_feedback_role_arn": "",
                            "sqs_success_feedback_role_arn": "",
                            "sqs_success_feedback_sample_rate": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_iam_policy.AmazonS3FullAccess": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                        "attributes": {
                            "arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                            "description": "Provides full access to all buckets via the AWS Management Console.",
                            "id": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                            "name": "AmazonS3FullAccess",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_iam_policy.AmazonSageMakerFullAccess": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                        "attributes": {
                            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                            "description": "Provides full access to Amazon SageMaker via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, ECR, CloudWatch Logs).",
                            "id": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                            "name": "AmazonSageMakerFullAccess",
                            "path": "/",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sagemaker:*\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"application-autoscaling:DeleteScalingPolicy\",\n                \"application-autoscaling:DeleteScheduledAction\",\n                \"application-autoscaling:DeregisterScalableTarget\",\n                \"application-autoscaling:DescribeScalableTargets\",\n                \"application-autoscaling:DescribeScalingActivities\",\n                \"application-autoscaling:DescribeScalingPolicies\",\n                \"application-autoscaling:DescribeScheduledActions\",\n                \"application-autoscaling:PutScalingPolicy\",\n                \"application-autoscaling:PutScheduledAction\",\n                \"application-autoscaling:RegisterScalableTarget\",\n                \"aws-marketplace:ViewSubscriptions\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:GetMetricData\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"cloudwatch:PutMetricData\",\n                \"codecommit:BatchGetRepositories\",\n                \"codecommit:CreateRepository\",\n                \"codecommit:GetRepository\",\n                \"codecommit:ListBranches\",\n                \"codecommit:ListRepositories\",\n                \"cognito-idp:AdminAddUserToGroup\",\n                \"cognito-idp:AdminCreateUser\",\n                \"cognito-idp:AdminDeleteUser\",\n                \"cognito-idp:AdminDisableUser\",\n                \"cognito-idp:AdminEnableUser\",\n                \"cognito-idp:AdminRemoveUserFromGroup\",\n                \"cognito-idp:CreateGroup\",\n                \"cognito-idp:CreateUserPool\",\n                \"cognito-idp:CreateUserPoolClient\",\n                \"cognito-idp:CreateUserPoolDomain\",\n                \"cognito-idp:DescribeUserPool\",\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"cognito-idp:ListGroups\",\n                \"cognito-idp:ListIdentityProviders\",\n                \"cognito-idp:ListUserPoolClients\",\n                \"cognito-idp:ListUserPools\",\n                \"cognito-idp:ListUsers\",\n                \"cognito-idp:ListUsersInGroup\",\n                \"cognito-idp:UpdateUserPool\",\n                \"cognito-idp:UpdateUserPoolClient\",\n                \"ec2:CreateNetworkInterface\",\n                \"ec2:CreateNetworkInterfacePermission\",\n                \"ec2:CreateVpcEndpoint\",\n                \"ec2:DeleteNetworkInterface\",\n                \"ec2:DeleteNetworkInterfacePermission\",\n                \"ec2:DescribeDhcpOptions\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeRouteTables\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeVpcEndpoints\",\n                \"ec2:DescribeVpcs\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:CreateRepository\",\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:Describe*\",\n                \"elastic-inference:Connect\",\n                \"glue:CreateJob\",\n                \"glue:DeleteJob\",\n                \"glue:GetJob\",\n                \"glue:GetJobRun\",\n                \"glue:GetJobRuns\",\n                \"glue:GetJobs\",\n                \"glue:ResetJobBookmark\",\n                \"glue:StartJobRun\",\n                \"glue:UpdateJob\",\n                \"groundtruthlabeling:*\",\n                \"iam:ListRoles\",\n                \"kms:DescribeKey\",\n                \"kms:ListAliases\",\n                \"lambda:ListFunctions\",\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:DescribeLogStreams\",\n                \"logs:GetLogEvents\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:DeleteRepositoryPolicy\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:DeleteRepository\",\n                \"ecr:PutImage\"\n            ],\n            \"Resource\": \"arn:aws:ecr:*:*:repository/*sagemaker*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"codecommit:GitPull\",\n                \"codecommit:GitPush\"\n            ],\n            \"Resource\": [\n                \"arn:aws:codecommit:*:*:*sagemaker*\",\n                \"arn:aws:codecommit:*:*:*SageMaker*\",\n                \"arn:aws:codecommit:*:*:*Sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:CreateSecret\",\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:ListSecrets\",\n                \"secretsmanager:TagResource\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:GetSecretValue\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"secretsmanager:ResourceTag/SageMaker\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"robomaker:CreateSimulationApplication\",\n                \"robomaker:DescribeSimulationApplication\",\n                \"robomaker:DeleteSimulationApplication\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"robomaker:CreateSimulationJob\",\n                \"robomaker:DescribeSimulationJob\",\n                \"robomaker:CancelSimulationJob\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::*SageMaker*\",\n                \"arn:aws:s3:::*Sagemaker*\",\n                \"arn:aws:s3:::*sagemaker*\",\n                \"arn:aws:s3:::*aws-glue*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\",\n                \"s3:ListAllMyBuckets\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEqualsIgnoreCase\": {\n                    \"s3:ExistingObjectTag/SageMaker\": \"true\"\n                 }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"lambda:InvokeFunction\"\n            ],\n            \"Resource\": [\n                \"arn:aws:lambda:*:*:function:*SageMaker*\",\n                \"arn:aws:lambda:*:*:function:*sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*Sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*LabelingFunction*\"\n            ]\n        },\n        {\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint\",\n             \"Condition\": {\n                \"StringLike\": {\n                    \"iam:AWSServiceName\": \"sagemaker.application-autoscaling.amazonaws.com\"\n\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"robomaker.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:PassedToService\": [\n                        \"sagemaker.amazonaws.com\",\n                        \"glue.amazonaws.com\",\n                        \"robomaker.amazonaws.com\"\n                    ]\n                }\n            }\n        }\n    ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
